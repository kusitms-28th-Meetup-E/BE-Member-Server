plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.11'
    id 'io.spring.dependency-management' version '1.1.3'

}

group = 'gwangjang'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2022.0.4")
}


dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'junit:junit:4.13.1'
    runtimeOnly 'com.mysql:mysql-connector-j'

    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.0.2'

    implementation 'org.springframework.boot:spring-boot-starter-web'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

//    implementation "org.springframework.cloud:spring-cloud-starter-bootstrap"
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Querydsl 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'

    // WebClient
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Feign
    implementation 'io.github.openfeign:feign-httpclient:12.3'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.0.4'


    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'jakarta.mail:jakarta.mail-api:2.1.2'
    implementation 'org.springframework.boot:spring-boot-starter-mail'


    implementation group: 'org.springframework.cloud', name: 'spring-cloud-stream-binder-kafka', version: '3.2.1'


    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
    implementation 'org.springframework.boot:spring-boot-starter-amqp:2.5.4'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-core:3.11.2'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar{
    archivesBaseName = 'memberService'
    archiveFileName = 'memberService.jar'
    archiveVersion = "0.0.1"
}

// === Querydsl 빌드 옵션 (선택사항) ===

def querydslDir = "src/main/generated/querydsl"

sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
    file(querydslDir).deleteDir()
}